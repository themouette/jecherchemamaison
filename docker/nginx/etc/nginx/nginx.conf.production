#user  nobody;
worker_processes  1;

#error_log  /var/log/nginx/error.log;
#error_log  /var/log/nginx/error.log  notice;
#error_log  /var/log/nginx/error.log  info;

#pid        /var/log/nginx/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       /etc/nginx/conf/mime.types;
    include       /etc/nginx/proxy.conf;
    include       /etc/nginx/fastcgi.conf;

    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;

    # define backend server
    upstream recherche_immo {
        server app.recherche.immo:1337 weight=1;
    }

    server {
        listen       80 default_server;
        #listen       443 ssl default_server;
        server_name  localhost recherche.immo www.recherche.immo;
        access_log   /var/log/nginx/access.log  main;

        #charset koi8-r;

        #access_log  /var/log/nginx/host.access.log  main;

        location ~ ^/(images|javascript|js|css|flash|media|static)/ {
            root   /var/www/recherche.immo/public;
            index  index.html index.htm;
            expires 1h;
        }

        error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

        # Proxy other routes to nodejs server
        #
        location / {
            proxy_pass   http://recherche_immo/;
        }

    }
}

# stay in the foreground so Docker has a process to track
#daemon off;
